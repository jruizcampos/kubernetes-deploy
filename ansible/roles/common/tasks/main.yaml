---

- name: Configuramos el hostname
  hostname:
    name: "{{inventory_hostname}}.{{kubernets_domain}}"
  when: inventory_hostname is regex("work*|master*")
  become: yes

- name: Agregamos los DNS de los demás hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{item}} {{item}}.{{kubernets_domain}}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.all }}"
  become: yes

- name: Actualizando los paquetes del Sistema
  dnf:
    name: "*"
    state: latest
  become: yes

- name: Deshabilitamos SELinux
  selinux:
    state: disabled
  become: yes

- name: Desactivamos la memoria Swap
  shell: swapoff -a
  become: yes
  
- name: Comentamos la línea de la particion swap del /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
  become: yes

- name: Reiniciando el server
  reboot:
  become: yes

- name: Instalando Chrony (Red Hat/Centos)
  dnf:
    name: chrony
    state: present
  become: yes

# Yo soy de Lima/Perú ;)
- name: Configurando el timezone a America/Lima
  timezone:
    name: America/Lima
  become: yes
  
- name: Habilitar servicio Chronyd (Red Hat)
  systemd:
    name: chronyd
    state: started
    enabled: yes
    masked: no
  become: yes
  
- name: Habilitamos el módulo de Kernel br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  become: yes

- name: Habilitamos el enmascaramiento en la zona public
  firewalld:
    masquerade: yes
    state: enabled
    permanent: true
    zone: public
  become: yes

- name: Configuramos el AllowZoneDrifting=no en firewalld
  lineinfile:
    dest: /etc/firewalld/firewalld.conf
    regexp: '^AllowZoneDrifting='
    line: "AllowZoneDrifting=no"
    state: present
  become: yes

- name: Habilitar y reiniciar el servicio firewalld (Red Hat)
  systemd:
    name: firewalld
    state: restarted
    enabled: yes
    masked: no
  become: yes
  
- name: Creando el archivo /etc/sysctl.d/k8s.conf
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  become: yes

- name: Recargamos todas las variables de sysctl
  shell: sysctl --system
  become: yes
  
- name: Agregamos el repositorio de Docker
  shell: dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo
  become: yes

- name: Instalamos Docker
  dnf:
    name: "{{ docker_packages }}"
    state: present
  become: yes

- name: Habilitar e iniciamos el servicio de Docker
  systemd:
    name: docker
    state: started
    enabled: yes
    masked: no
  become: yes
  